{"version":3,"sources":["logo.svg","component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","width","height","name","email","CardList","monsters","map","SearchBox","placeholder","handleCHange","type","onChange","App","handleChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,kBCYAA,MAVf,SAAcC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,IAAI,UAAUC,MAAM,QAAQC,OAAO,UAClG,6BAAKP,EAAMG,QAAQK,OACnB,4BAAIR,EAAMG,QAAQM,Y,MCJf,SAASC,EAASV,GAC7B,OACI,qBAAKC,UAAU,YAAf,SAEID,EAAMW,SAASC,KAAI,SAAAT,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,S,MCMnBS,MAXf,YAAkD,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,aAC9B,OACI,uBACAd,UAAU,SACVe,KAAK,SACLF,YAAaA,EACbG,SAAUF,KC+BHG,E,kDAlCb,aAAe,IAAD,8BACZ,gBAWFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAXtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAM/C,WACE,MAAkCC,KAAKN,MAA/Bd,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YACZU,EAAmBrB,EAASsB,QAAO,SAAC9B,GAAD,OACvCA,EAAQK,KAAK0B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEa,YAAY,kBACZC,aAAcgB,KAAKZ,eAErB,cAACT,EAAD,CAAUC,SAAUqB,W,GA7BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fb425eed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport './card.styles.css'\nfunction Card(props) {\n    return (\n        <div className=\"card-container\">\n            <img src={`https://robohash.org/${props.monster.id}?set=set2`} alt=\"monster\" width=\"180px\" height=\"180px\"/> \n            <h2>{props.monster.name}</h2>\n            <p>{props.monster.email}</p>\n        </div>\n    )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from '../card/card.component'\nimport './card-list.styles.css'\nexport default function CardList(props) {\n    return (\n        <div className=\"card-list\">\n        {\n            props.monsters.map(monster => \n               <Card key={monster.id} monster={monster} />\n              )\n          }\n        </div>\n    )\n}\n","import React from 'react'\nimport './search-box.styles.css'\n\nfunction SearchBox({ placeholder, handleCHange}) {\n    return (\n        <input \n        className=\"search\"\n        type=\"search\"\n        placeholder={placeholder}\n        onChange={handleCHange}\n      />\n    )\n}\n\nexport default SearchBox\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport CardList from \"./component/card-list/card-list.component\";\nimport SearchBox from \"./component/search-box/search-box.component\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(`https://jsonplaceholder.typicode.com/users`)\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search monsters\"\n          handleCHange={this.handleChange }\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}